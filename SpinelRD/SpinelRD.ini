[DAEMON]
; タスクトレイにアイコンを常駐させるかどうか(y:有効／n:無効)
ShowTaskIcon=n
; Logディレクトリにログを出力するかどうか(y:有効／n:無効)
; ※有効にするとLogディレクトリに daemonlogYYYYMMDD.txt 形式のログを出力
LogEnabled=n
; バックグラウンド処理を一時停止するかどうか(y:有効／n:無効)
; ※バックグラウンド処理を一時停止したい場合は、この値をyにすると一時停止可
JobPause=n
; バックグラウンド処理の実行間隔(分単位)
; (Default: 60) 1時間
JobInterval=60

; バックグラウンド処理時のスレッド優先度
; (Default: THREAD_PRIORITY_LOWEST)
;ThreadPriority=THREAD_PRIORITY_TIME_CRITICAL  ; リアルタイム
;ThreadPriority=THREAD_PRIORITY_HIGHEST        ; 高い
;ThreadPriority=THREAD_PRIORITY_ABOVE_NORMAL   ;  ↑
;ThreadPriority=THREAD_PRIORITY_NORMAL         ; 通常
;ThreadPriority=THREAD_PRIORITY_BELOW_NORMAL   ;  ↓
;ThreadPriority=THREAD_PRIORITY_LOWEST         ; 低い
;ThreadPriority=THREAD_PRIORITY_IDLE           ; アイドル時のみ


[Spinel]
; 死活監視を有効にするかどうか(y:有効／n:無効)
Enabled=y
; 死活監視するプログラム
ExeName=Spinel.exe
; 死活監視するプログラムの引数
ExeParam=-WindowState=Minimized

; 死活監視するプログラムに設定するプロセス優先度
; (Default: 0) 優先度変更なし
;ProcessPriority=REALTIME_PRIORITY_CLASS        ; リアルタイム
;ProcessPriority=ABOVE_NORMAL_PRIORITY_CLASS    ; 高い
;ProcessPriority=NORMAL_PRIORITY_CLASS          ; 通常
;ProcessPriority=BELOW_NORMAL_PRIORITY_CLASS    ; 低い
;ProcessPriority=IDLE_PRIORITY_CLASS            ; アイドル時のみ

; 常時死活監視を有効にするかどうか(y:有効／n:無効)
; 有効にすると Spinel.exe が不意に突然死した場合、もしくは応答が途絶えた場合に
; 自動的に再起動されるようなる。
; ※ デフォルトはn(無効)。
; ※ 無効時でも、本APP立ち上げ時、サスペンドからの復帰時は、ともに再起動される。
; ※ 有効にした場合、SpinelRD.exe 自体をタスクマネージャから終了するか、
;   DeathResume の値をnに書き換えてから Spinel.exe を終了しないと、
;   Spinel.exe が無限に再起動されることになるので、要注意！！
;DeathResume=y
DeathResume=n
; Spinel 起動時に Config フォルダの UISetting.json を抹消するかどうか
; (y:有効／n:無効)
RemoveUISetting=y
; 死活監視間隔 (初期値:5000ms[5秒])
ResumeDelay=5000


;----------------- 以降バックグラウンドで行われる処理群の設定 -----------------


; SpinelのLogフォルダローテーション
; (Spinelの古いLogファイル tracelogYYYYMMDD.txt を自動的に消す機能)
[LogRotation]
; Logフォルダローテーションを有効にするかどうか(y:有効／n:無効)
Enabled=y
; ログの最大ファイル数
MaxFiles=100
; ログの最大バイト数
MaxBytes=100M


; ユーザーディレクトリローテーションのサンプル
; (古いファイルを自動的に消す機能)
; セクション[Rotation.XXXXXX]の表記で好きなだけ追加可能。
; ※ XXXXXX は任意の英数字またはアンダーバー
[Rotation.VCR_succeeded]
; ディレクトリローテーションを有効にするかどうか(y:有効／n:無効)
Enabled=n
; ローテーション対象にするファイルパス＋マスク(カンマで区切って複数指定可能)
FileMask=X:\Recording\VCR\succeeded\*.ts
; ディレクトリに残す最大ファイル数(制限しない場合はコメントアウト)
MaxFiles=1000
; ディレクトリに残す最大容量
; (マイナスの値を指定するとドライブの空き領域をどのくらい残すかを意味する)
MaxBytes=-20G ; この場合、最低限20ギガバイトの空き領域が常に残るように振舞う
; ディレクトリに存在する一番新しいファイルの日時から換算しての最大保持日数
; (制限しない場合はコメントアウト)
MaxDays=90
; サブディレクトリのファイルも処理の対象に含めるかどうか(y:有効／n:無効)
; (Default: n) 含めない
SubDirectories=n
; ローテーションするときに道連れに一緒に削除するサフィックスを持つファイル群
FellowSuffix=.ts.err,.ts.program.txt,.chapter


; ユーザーディレクトリローテーションのサンプル2
[Rotation.VCR_Converted]
Enabled=n
FileMask=X:\Recording\VCR\Converted\*.mkv,*.mp4
;MaxFiles=10000
MaxBytes=1T ; この場合、合計ファイル容量が1テラバイトを超えると削除を開始する
;MaxDays=365
FellowSuffix=.ts.*,.chapter,-enc.log

